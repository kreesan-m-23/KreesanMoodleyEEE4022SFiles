- The programmes inside the 'Jammer Programmes' folder cover all the jammer sub-systems and complete deceptive jammer.
- Atollic Code was also generated for the final deceptive jammer. It has the same user code as the Keil files. Only initialization code generated by CubeMX changes.
- Programmes outside of the 'Jammer Programmes' folder were done to get basic operations working on the microcontroller before attempting jamming.
- 'USER CODE BEGIN 0' is the section where user varialbes are defined in all codes.
- 'USER CODE BEGIN 2' is the section where initilizations performed by the user are perfromed in each code.
- 'USER CODE BEGIN 4' is where all codes inside interrupt routines are shown. All functional coding except code done in the infinite loop (none in this project) are done here.
- It is important that codes be done in the sections which are specified as they move to these sections automatically if source code is re-generated in STM32 CubeMX.
- All other code in any file is generated by STM32 CubeMX.
- Source can be changed in the 'main.c' files eg. PSC values as STM32 CubeMX generates organised and readable source code.This means that parameters do not have to be changed in STM32 CubeMX each time which would require re-generation of source code.
- If source code is re-generated in CubeMX, old user-code will remain only if they lie within the specified sections mentioned earlier hence making it important that the user codes within these sections which are defined for them.
- In the DMA programme, the ADC and DAC are linked to timers and all code needed are found under 'USER CODE BEGIN 2'. 'USER CODE BEGIN 4' simply checks if the sampling rate is correct by toggling a LED. The actual reading and writing of signals are done in the one-line codes found under the 'USER CODE BEGIN 2' section.
- Interrupt functions are extracted from the 'HAL' libraries which the CubeMX attaches accoridng to user requirements.
- See https://www.youtube.com/channel/UC-CuJ6qKst9-8Z-EXjoYK3Q/videos for tutorials on how to use STM32 CubeMX.
